
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author irpik
 */
public class Main extends javax.swing.JFrame {
    
    
    
    DefaultTableModel tabloModel;                                                       //tablolara veri eklemek için model oluşturuldu.
    DefaultTableModel maxTabloModel;
    DefaultTableModel kullanilabilirTabloModel;
    DefaultTableModel ihtiyacTabloModel;
    DefaultTableModel ihtiyacGorevAdModel; 

    /**
     * Creates new form Main
     */
    public Main() {
        this.setTitle("Banker Algoritması");
        initComponents();
        tabloModel = (DefaultTableModel) tabloAtanma.getModel();                        //tablolara veri eklemek için model oluşturuldu.
        tabloModel.addColumn(" ");
        maxTabloModel = (DefaultTableModel) maxTablo.getModel();
        maxTabloModel.addColumn(" ");
        kullanilabilirTabloModel = (DefaultTableModel) kullanilabilirTable.getModel();
        ihtiyacTabloModel = (DefaultTableModel) ihtiyacTablo.getModel();
        ihtiyacGorevAdModel = (DefaultTableModel) ihtiyacGorevAdTablo.getModel();
        ihtiyacGorevAdModel.addColumn(" ");
        this.setResizable(false);
        kaynakEkleBtn.requestFocusInWindow();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        kaynakAdDegerTF = new javax.swing.JTextField();
        kaynakEkleBtn = new javax.swing.JButton();
        kaynaklarTF = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        gorevNoLbl = new javax.swing.JLabel();
        gorevlerTf = new javax.swing.JTextField();
        gorevAtaBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabloAtanma = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        maxGorevNoLbl = new javax.swing.JLabel();
        maxTf = new javax.swing.JTextField();
        maxEkleBtn = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        maxTablo = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        kullanilabilirTable = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        ihtiyacTablo = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        gorevSirasiGirTf = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        gorevAdiTf = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        kaynakIsimleriTf = new javax.swing.JTextField();
        hesaplaBtn = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        ihtiyacGorevAdTablo = new javax.swing.JTable();
        sonucTf1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 153));

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 102, 51));
        jLabel1.setText("Kaynak Adı ve Değeri: ");

        kaynakAdDegerTF.setText("Örn: A=10");
        kaynakAdDegerTF.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        kaynakAdDegerTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                kaynakAdDegerTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                kaynakAdDegerTFFocusLost(evt);
            }
        });

        kaynakEkleBtn.setBackground(new java.awt.Color(0, 204, 204));
        kaynakEkleBtn.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        kaynakEkleBtn.setText("Ekle");
        kaynakEkleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kaynakEkleBtnActionPerformed(evt);
            }
        });

        kaynaklarTF.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        kaynaklarTF.setForeground(new java.awt.Color(0, 0, 255));
        kaynaklarTF.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        kaynaklarTF.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 102, 51));
        jLabel3.setText("Toplam Kaynaklar:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 102, 51));
        jLabel2.setText("Görev Atama İşlemleri");

        gorevNoLbl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        gorevNoLbl.setText("P0");

        gorevlerTf.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        gorevlerTf.setText("Örn: 1 2 3");
        gorevlerTf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                gorevlerTfFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                gorevlerTfFocusLost(evt);
            }
        });
        gorevlerTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gorevlerTfActionPerformed(evt);
            }
        });

        gorevAtaBtn.setBackground(new java.awt.Color(0, 204, 204));
        gorevAtaBtn.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        gorevAtaBtn.setText("Ekle");
        gorevAtaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gorevAtaBtnActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 204, 0));
        jLabel4.setText("Atanma");

        tabloAtanma.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tabloAtanma);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 102, 51));
        jLabel5.setText("Toplam Kaynak Kullanımı");

        maxGorevNoLbl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        maxGorevNoLbl.setText("P0");

        maxTf.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        maxTf.setText("Örn: 1 2 3");
        maxTf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                maxTfFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                maxTfFocusLost(evt);
            }
        });

        maxEkleBtn.setBackground(new java.awt.Color(0, 204, 204));
        maxEkleBtn.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        maxEkleBtn.setText("Ekle");
        maxEkleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxEkleBtnActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 204, 0));
        jLabel7.setText("Max");

        maxTablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(maxTablo);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 204, 0));
        jLabel6.setText("Kullanılabilir");

        kullanilabilirTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(kullanilabilirTable);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 204, 0));
        jLabel8.setText("İhtiyaç");

        ihtiyacTablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(ihtiyacTablo);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 102, 51));
        jLabel9.setText("Görev Çalışma Sırası Giriniz");

        gorevSirasiGirTf.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        gorevSirasiGirTf.setText("Örn: P0,P1,P2");
        gorevSirasiGirTf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                gorevSirasiGirTfFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                gorevSirasiGirTfFocusLost(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 255));
        jLabel10.setText("Belirli görevin sadece belirli kaynağı çalıştırması (İSTEĞE BAĞLI)");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 102, 51));
        jLabel11.setText("Görev Adı:");

        gorevAdiTf.setText("Örn:P0");
        gorevAdiTf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                gorevAdiTfFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                gorevAdiTfFocusLost(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 102, 51));
        jLabel12.setText("Kaynak İsimleri:");

        kaynakIsimleriTf.setText("Örn: A,C");
        kaynakIsimleriTf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                kaynakIsimleriTfFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                kaynakIsimleriTfFocusLost(evt);
            }
        });

        hesaplaBtn.setBackground(new java.awt.Color(0, 204, 204));
        hesaplaBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        hesaplaBtn.setText("Hesapla");
        hesaplaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hesaplaBtnActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(11, 90, 41));
        jLabel13.setText("SONUÇ:");

        ihtiyacGorevAdTablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane5.setViewportView(ihtiyacGorevAdTablo);

        sonucTf1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        sonucTf1.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(maxGorevNoLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(maxTf, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(maxEkleBtn)
                .addGap(130, 130, 130))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(208, 208, 208)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(94, 94, 94))
                            .addComponent(gorevSirasiGirTf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(gorevAdiTf, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(kaynakIsimleriTf, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(67, 67, 67)
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(hesaplaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(sonucTf1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(17, 17, 17))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(127, 127, 127))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(89, 89, 89)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(206, 206, 206))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(kaynakAdDegerTF, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(kaynakEkleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(40, 40, 40)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(kaynaklarTF, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(gorevNoLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(gorevlerTf, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(gorevAtaBtn)))
                                .addGap(0, 22, Short.MAX_VALUE)))))
                .addGap(24, 24, 24))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(198, 198, 198)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kaynakAdDegerTF, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kaynakEkleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kaynaklarTF, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(50, 50, 50)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(gorevNoLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(gorevlerTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(maxGorevNoLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(maxTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(maxEkleBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(gorevAtaBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(29, 29, 29)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(gorevSirasiGirTf, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gorevAdiTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(kaynakIsimleriTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addComponent(hesaplaBtn)
                        .addGap(19, 19, 19)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                            .addComponent(sonucTf1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(37, 37, 37))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void kaynakAdDegerTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kaynakAdDegerTFFocusGained
        if (kaynakAdDegerTF.getText().equals("Örn: A=10")) {
            kaynakAdDegerTF.setText("");                                              //kaynak veri girişi TextField içine açıklama eklendi
            kaynakAdDegerTF.setForeground(Color.BLACK);                               //tıklanınca kapanması için kod bloğu
        }
    }//GEN-LAST:event_kaynakAdDegerTFFocusGained

    private void kaynakAdDegerTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kaynakAdDegerTFFocusLost
        if (kaynakAdDegerTF.getText().equals("")) {                                     //kaynak veri girişi TextField içine açıklama eklendi
            kaynakAdDegerTF.setText("Örn: A=10");                                       //tıklanınca kapanması için kod bloğu
            kaynakAdDegerTF.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_kaynakAdDegerTFFocusLost
    ArrayList<Integer> kaynakSayilariList = new ArrayList<>();
    private void kaynakEkleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kaynakEkleBtnActionPerformed
        
        String kaynaklar = kaynakAdDegerTF.getText();                                //kaynak değerlerini yazdıktan sonra, ekle butonuna basıldığı zaman 
        kaynaklarTF.setText(kaynakEkleYazdir(kaynaklar));                     //kayanak değerlerini toplam kaynaklar TextField ına yazar
        String[] gorevAdAyır= kaynaklar.split("=");                                  //ve kaynak isimlerini alarak tablolardaki başlık kısımlarına yazar
        tabloModel.addColumn(gorevAdAyır[0]);
        maxTabloModel.addColumn(gorevAdAyır[0]);
        kaynakSayilariList.add(Integer.valueOf(gorevAdAyır[1]));
        kullanilabilirTabloModel.addColumn(gorevAdAyır[0]);
        ihtiyacTabloModel.addColumn(gorevAdAyır[0]);
    }//GEN-LAST:event_kaynakEkleBtnActionPerformed

    private void gorevlerTfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gorevlerTfFocusGained
        if (gorevlerTf.getText().equals("Örn: 1 2 3")) {
            gorevlerTf.setText("");                                                    //görev atama işlemleri TextField içine açıklama eklendi
            gorevlerTf.setForeground(Color.BLACK);                                     //tıklanınca kapanması için kod bloğu
        }
    }//GEN-LAST:event_gorevlerTfFocusGained

    private void gorevlerTfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gorevlerTfFocusLost
        if (gorevlerTf.getText().equals("")) {                                         //görev atama işlemleri TextField içine açıklama eklendi
            gorevlerTf.setText("Örn: 1 2 3");                                           //tıklanınca kapanması için kod bloğu
            gorevlerTf.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_gorevlerTfFocusLost

    private void gorevlerTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gorevlerTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gorevlerTfActionPerformed
static int butonTiklaGorevAta = 0;
    private void gorevAtaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gorevAtaBtnActionPerformed
        //banker.ayir();                                                                //atanmış görev ekle butonu
        atanma();                                                                       //görev atama işlemleri TextField içindeki veriyi alır
        kullanilabilir();                                                               //tabloya yazar metotlarını çağırır
        butonTiklaGorevAta++;
    }//GEN-LAST:event_gorevAtaBtnActionPerformed
static int butonTiklaMax = 0;
    private void maxEkleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxEkleBtnActionPerformed
        if (butonTiklaGorevAta > butonTiklaMax) {                                       // max görev ekle butonu
            maxEkle();                                                                  //toplam kayanak TextField içindeki veriyi alır
            ihtiyac();                                                                  //max görev tablosuna ekleme metotlarını çağırır
            butonTiklaMax++;   
        }else{
            JOptionPane.showMessageDialog(rootPane, "Görev Sayısını Aştınız!!","Uyarı",HEIGHT);
        }
    }//GEN-LAST:event_maxEkleBtnActionPerformed

    private void maxTfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_maxTfFocusGained
        if (maxTf.getText().equals("Örn: 1 2 3")) {
            maxTf.setText("");                                                      //max görev atama işlemleri TextField içine açıklama eklendi
            maxTf.setForeground(Color.BLACK);                                       //tıklanınca kapanması için kod bloğu
        }
    }//GEN-LAST:event_maxTfFocusGained

    private void maxTfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_maxTfFocusLost
        if (maxTf.getText().equals("")) {                                             //max görev atama işlemleri TextField içine açıklama eklendi
            maxTf.setText("Örn: 1 2 3");                                              //tıklanınca kapanması için kod bloğu
            maxTf.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_maxTfFocusLost

    private void gorevSirasiGirTfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gorevSirasiGirTfFocusGained
        if (gorevSirasiGirTf.getText().equals("Örn: P0,P1,P2")) {
            gorevSirasiGirTf.setText("");                                            // görev giriş sırası TextField içine açıklama eklendi
            gorevSirasiGirTf.setForeground(Color.BLACK);                            //tıklanınca kapanması için kod bloğu
        }
    }//GEN-LAST:event_gorevSirasiGirTfFocusGained

    private void gorevSirasiGirTfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gorevSirasiGirTfFocusLost
        if (gorevSirasiGirTf.getText().equals("")) {
            gorevSirasiGirTf.setText("Örn: P0,P1,P2");                              // görev giriş sırası TextField içine açıklama eklendi
            gorevSirasiGirTf.setForeground(new Color(153,153,153));                 //tıklanınca kapanması için kod bloğu
        }
    }//GEN-LAST:event_gorevSirasiGirTfFocusLost

    private void gorevAdiTfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gorevAdiTfFocusGained
        if (gorevAdiTf.getText().equals("Örn:P0")) {                                // belirli görev adı TextField içine açıklama eklendi
            gorevAdiTf.setText("");                                                 //tıklanınca kapanması için kod bloğu
            gorevAdiTf.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_gorevAdiTfFocusGained

    private void gorevAdiTfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gorevAdiTfFocusLost
        if (gorevAdiTf.getText().equals("")) {
            gorevAdiTf.setText("Örn:P0");                                           // belirli görev adı TextField içine açıklama eklendi
            gorevAdiTf.setForeground(new Color(153,153,153));                       //tıklanınca kapanması için kod bloğu
        }
    }//GEN-LAST:event_gorevAdiTfFocusLost

    private void kaynakIsimleriTfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kaynakIsimleriTfFocusGained
        if (kaynakIsimleriTf.getText().equals("Örn: A,C")) {
            kaynakIsimleriTf.setText("");                                           // belirli kaynak adı TextField içine açıklama eklendi
            kaynakIsimleriTf.setForeground(Color.BLACK);                            //tıklanınca kapanması için kod bloğu
        }
    }//GEN-LAST:event_kaynakIsimleriTfFocusGained

    private void kaynakIsimleriTfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kaynakIsimleriTfFocusLost
        if (kaynakIsimleriTf.getText().equals("")) {                                // belirli kaynak adı TextField içine açıklama eklendi
            kaynakIsimleriTf.setText("Örn: A,C");                                   //tıklanınca kapanması için kod bloğu
            kaynakIsimleriTf.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_kaynakIsimleriTfFocusLost

    private void hesaplaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hesaplaBtnActionPerformed
        String[] gorevAdediBul = gorevSirasiGirTf.getText().split(",");
        if (butonTiklaGorevAta == gorevAdediBul.length) {                           //verilen sıralamda görevlerin hesaplanmasını sağlayan buton ile
            gorevCalistir();                                                        //gorevCalistir metodu ile baker algoritması hesaplanır
        }
        else if (gorevAdediBul.length < butonTiklaGorevAta) {
            JOptionPane.showMessageDialog(rootPane, "Görev Sayısını Eksik Girdiniz!!","Uyarı",HEIGHT);
        }
        else {
            JOptionPane.showMessageDialog(rootPane, "Görev Sayısını Aştınız!!","Uyarı",HEIGHT);
        }                                                                
    }//GEN-LAST:event_hesaplaBtnActionPerformed

    ArrayList<String> kaynakListesi = new ArrayList<>();
    public String kaynakEkleYazdir(String gelenKaynak){    // kaynak isimleri ile sayılarını alıp yanyana ekleyip toplam kaynak listesine gönderilir
        kaynakListesi.add(gelenKaynak);
        String k = "";
        for (String s : kaynakListesi) {
            k += s + " ";
        }
        return k;
    }
    
    
    int[][] atanmisGorevler;
    ArrayList<String> gorevAdList = new ArrayList<>();
    int i = 0;
    void atanma(){                                                                  //atanma metot bloğu
        String[] s = new String[kaynakListesi.size()+1];                     //atanacak görevler TextField bloğuna yazılmış görevleri atanma tablosnuna ekler
        String gorevAl = gorevlerTf.getText();
        String[] gorevBol = gorevAl.split(" ");
        s[0] = gorevNoLbl.getText();
        gorevAdList.add(gorevNoLbl.getText());
        for (int j = 0; j < gorevBol.length; j++) {
            s[j+1] = gorevBol[j];
        }
        tabloModel.insertRow(i,s);
        i++;
        gorevNoLbl.setText("P"+i);
        
        atanmisGorevler = new int[tabloModel.getRowCount()][tabloModel.getColumnCount()-1];
        for (int j = 0; j < atanmisGorevler.length; j++) {
            for (int k = 1; k <= atanmisGorevler[0].length; k++) {
                String veri = (String)tabloModel.getValueAt(j, k);
                int veri1 = Integer.valueOf(veri);
                atanmisGorevler[j][k-1] = veri1;
            }
        }
    }
    
    ArrayList<String> maxGorevAdList = new ArrayList<>();
    int[][] maxGorevler;
    int m = 0;
    void maxEkle(){
        String[] mx = new String[kaynakListesi.size()+1];                    //maxEkle metot bloğu
        String maxAl = maxTf.getText();                                             //maxekle TextField bloğundaki yazılmış görevleri max tablosuna ekler
        String[] maxBol = maxAl.split(" ");
        mx[0] = maxGorevNoLbl.getText();
        String[] gorevAdiIhtiyac = new String[1];
        gorevAdiIhtiyac[0] = maxGorevNoLbl.getText();
        ihtiyacGorevAdModel.insertRow(m, gorevAdiIhtiyac);
        maxGorevAdList.add(maxGorevNoLbl.getText());
        for (int j = 0; j < maxBol.length; j++) {
            mx[j+1] = maxBol[j];
        }
        maxTabloModel.insertRow(m, mx);
        m++;
        maxGorevNoLbl.setText("P"+m);
        
        maxGorevler = new int[maxTabloModel.getRowCount()][maxTabloModel.getColumnCount()-1];
        for (int j = 0; j < maxGorevler.length; j++) {
            for (int k = 1; k <= maxGorevler[0].length; k++) {
                String veri = (String)maxTabloModel.getValueAt(j, k);
                int veri1 = Integer.valueOf(veri);
                maxGorevler[j][k-1] = veri1;
            }
        }
//        for (int j = 0; j < maxGorevler.length; j++) {
//            for (int k = 0; k < maxGorevler[0].length; k++) {
//                System.out.print(maxGorevler[j][k]);
//            }System.out.println("");
//        }
    }
    
    String[] tut;
    void kullanilabilir(){
        tut = new String[atanmisGorevler[0].length];                            //kullanılabiler metot bloğu
        kullanilabilirTabloModel.removeRow(0);                                  //Toplam Kaynak değerlerinden Atanma tablosundaki atanmış kaynaları çıkararak
        for (int j = 0; j < atanmisGorevler[0].length; j++) {                   //boşta kalan kaynak sayısını elde edilir.
            int toplamAtanmis = 0;
            int sonuc = 0;
            for (int k = 0; k < atanmisGorevler.length; k++) {
                toplamAtanmis += atanmisGorevler[k][j];
            }
            sonuc = kaynakSayilariList.get(j)-(toplamAtanmis);
            tut[j] = String.valueOf(sonuc);
        }
        kullanilabilirTabloModel.insertRow(0,tut);
    }
    
    String[] ihtiyacTut; 
    void ihtiyac(){
        ihtiyacTut = new String[maxGorevler[0].length];                         //ihtiyac metot bloğu
        for (int j =ihtiyacTablo.getRowCount()-1; j >= 0; j--) {                //max kaynak tablosundaki verilerden atanma tablosundaki verileri matris olarak
            ihtiyacTabloModel.removeRow(j);                                     //çıkartıp ihtiyaç tablosuna ekler
        }
        for (int j = 0; j < maxGorevler.length; j++) {
            for (int k = 0; k < maxGorevler[0].length; k++) {
                int sonuc = (maxGorevler[j][k] - atanmisGorevler[j][k]);
                String sonuc1 = sonuc + "";
                ihtiyacTut[k] = sonuc1;
            }
            ihtiyacTabloModel.insertRow(j, ihtiyacTut);
            
        }
    }
    
    void gorevCalistir(){
        int[][] yeniSiralama = new int[atanmisGorevler.length][atanmisGorevler[0].length];     //görev çalıştır metot bloğu
        String[] gorevSirasi = gorevSirasiGirTf.getText().split(",");                           //verilen sıralamaya göre görevlerde ölümcül kilitleme varmı kontrol eder
        String[] kaynakIsim= kaynakIsimleriTf.getText().split(",");
        ArrayList<String> kaynakIsimList=new ArrayList<>();
        int[] gorevListIndexler=new int[kaynakIsim.length];
        int indexGorevAdi=-1;
        boolean görevKontrol= false;
        
        for (int j = 0; j < gorevSirasi.length; j++) {                      
            if(gorevSirasi[j].equals(gorevAdiTf.getText())){
                indexGorevAdi=j;
                görevKontrol=true;                                                  //belirli görev için belirli kaynakların çalışması istenirse 
                                                                                    //görev ismi ve kaynak isimlerini alma
                for (int k = 0; k < kaynakIsim.length; k++) {
                    kaynakIsimList.add(kaynakIsim[k]);
                    
                }
                
                break;
            }
        }
        if (görevKontrol) {
             
             int i=0;
            for (int j = 0; j < ihtiyacTablo.getColumnCount(); j++) {
                for (int k = 0; k < kaynakIsimList.size(); k++) {                       //belirli görev için belirli kaynakların çalışması istenirse 
                    // a b c d                                 b c                      //o kaynakarın istenildiği görevin index numarasını alınır
                    if(ihtiyacTablo.getColumnName(j).equals(kaynakIsimList.get(k))){
                        gorevListIndexler[i]=j;
                        i++;
                    }
                }
        }
        }
        
        
        int[] siralama = new int[gorevAdList.size()];
        for (int j = 0; j < gorevAdList.size(); j++) {                          //çalışma sırası verdiğimiz görevlerin, atanma tablosunda hangi index lerde olduğunu siralama dizisine kaydediyoruz.
            siralama[j] = gorevAdList.indexOf(gorevSirasi[j]);
        }        
        for (int j = 0; j < atanmisGorevler.length; j++) {
            for (int k = 0; k < atanmisGorevler[0].length; k++) {               //atanmisGorevler dizisindeki elemanları yeniSiralama dizisine bizim istediğimiz sıralamada çalışacak şekilde ekliyoruz.
                yeniSiralama[j][k] = atanmisGorevler[siralama[j]][k];
            }
        }
        int[][] ihtiyacArray = getTableDataIhtiyac();
        int[][] ihtiyacYeniArray = new int[ihtiyacArray.length][ihtiyacArray[0].length];
        for (int j = 0; j < ihtiyacArray.length; j++) {
            for (int k = 0; k < ihtiyacArray[0].length; k++) {                  //ihtiyac tablosundaki kaynakları ihtiyacYeniArray dizisine bizim istediğimiz sıralamada çalışacak şekilde ekliyoruz.
                ihtiyacYeniArray[j][k] = ihtiyacArray[siralama[j]][k];
            }
        }
//        for (int j = 0; j < ihtiyacYeniArray.length; j++) {
//            for (int k = 0; k < ihtiyacYeniArray[0].length; k++) {
//                System.out.print(ihtiyacYeniArray[j][k]);
//            }System.out.println("");
//        }
        int[] kullanilabilirYeni = new int[tut.length];
        for (int j = 0; j < tut.length; j++) {
            kullanilabilirYeni[j] = Integer.valueOf(tut[j]);                    //kullanılabilir kaynak değerlerini String veri türünden int veri türü dizisine aktarıyoruz.
        }
        if(görevKontrol){                                                       //belirli görev için belirli kaynakların çalışması istenirse bu bloğa girer.
             boolean kontrol2;   
             // 0 1 2
        for (int j = 0; j < ihtiyacYeniArray[0].length; j++) {                  //bu for ile alttaki açıklama yapılır
            kontrol2=true;
                                //0 2
            for (int k = 0; k < gorevListIndexler.length; k++) {
                                                                                
                if(j==gorevListIndexler[k]){                                    //belirli görev için belirli kaynakların çalışması istenirse örnek A,C isteniyor B kaynağı çalışmasını istemiyorsak B kaynak değerini geçici olarak 0 yapılır.
                    kontrol2=false;
                }
            }
            if (kontrol2==true) {
                ihtiyacYeniArray[indexGorevAdi][j]=0;
            }
            
        }                                                                       
        }
       
//        for (int j = 0; j < ihtiyacYeniArray.length; j++) {
//            for (int k = 0; k < ihtiyacYeniArray[0].length; k++) {
//                System.out.print(ihtiyacYeniArray[j][k]+"  ");
//            }
//            System.out.println("");
//        }
        
        
        boolean kontrol = false;
        for (int j = 0; j < ihtiyacYeniArray.length; j++) {
            for (int k = 0; k < ihtiyacYeniArray[0].length; k++) {
                int sonuc = kullanilabilirYeni[k] - ihtiyacYeniArray[j][k];     //Boş kaynak sayısı ile ihtiyac kaynak sayısı karşılaştırılır.
                if (sonuc < 0) {                                            
                    sonucTf1.setText("Kullanılamaz!!");                           //boş kaynak sayısı yetersiz ise program sonlanır.
                    kontrol = true;
                    break;
                }
            }
            if (kontrol) {
                break;
            }
            for (int k = 0; k < kullanilabilirYeni.length; k++) {
                kullanilabilirYeni[k] += yeniSiralama[j][k];                    //boş kaynak sayısı yeterli olup görev çalışırsa kullanılan kaynakları bırakınca kullanılabilir kaynaklara eklenir
            }
            
        }
        if (kontrol == false) {
            sonucTf1.setText("Kullanılabilir");                                  //Bütün görevler düzgün bir şekilde çalışınca burası çalısır ve kullanılabilir yazısını yazdırır.
        }
    }
    
    public int[][] getTableDataIhtiyac () {                                     //ihtiyaç tablosundaki verileri alır bu metot.
    DefaultTableModel dtm = (DefaultTableModel) ihtiyacTablo.getModel();
    int nRow = dtm.getRowCount(), nCol = dtm.getColumnCount();
    int[][] tableData = new int[nRow][nCol];
    for (int i = 0 ; i < nRow ; i++)
        for (int j = 0 ; j < nCol ; j++)
            tableData[i][j] = Integer.parseInt((String)dtm.getValueAt(i,j));
    return tableData;
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField gorevAdiTf;
    private javax.swing.JButton gorevAtaBtn;
    private javax.swing.JLabel gorevNoLbl;
    private javax.swing.JTextField gorevSirasiGirTf;
    private javax.swing.JTextField gorevlerTf;
    private javax.swing.JButton hesaplaBtn;
    private javax.swing.JTable ihtiyacGorevAdTablo;
    private javax.swing.JTable ihtiyacTablo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextField kaynakAdDegerTF;
    private javax.swing.JButton kaynakEkleBtn;
    private javax.swing.JTextField kaynakIsimleriTf;
    private javax.swing.JTextField kaynaklarTF;
    private javax.swing.JTable kullanilabilirTable;
    private javax.swing.JButton maxEkleBtn;
    private javax.swing.JLabel maxGorevNoLbl;
    private javax.swing.JTable maxTablo;
    private javax.swing.JTextField maxTf;
    private javax.swing.JLabel sonucTf1;
    private javax.swing.JTable tabloAtanma;
    // End of variables declaration//GEN-END:variables
}
